{
    "docs": [
        {
            "location": "/", 
            "text": "Welcome!\n\n\nThis site contains tutorials for using the\n\nMicrobial Genomics Virtual Lab\n to perform bioinformatics\ntasks on bacterial \nomics\n data, either on the Unix command line or using\nthe \nGalaxy\n system.\n\n\n\n\nNote\n\n\nThe site is under active development. Training modules are being developed\nand added progressively. Please submit issues or suggestions to our\n\nIssue Tracker site\n.", 
            "title": "Home"
        }, 
        {
            "location": "/#welcome", 
            "text": "This site contains tutorials for using the Microbial Genomics Virtual Lab  to perform bioinformatics\ntasks on bacterial  omics  data, either on the Unix command line or using\nthe  Galaxy  system.   Note  The site is under active development. Training modules are being developed\nand added progressively. Please submit issues or suggestions to our Issue Tracker site .", 
            "title": "Welcome!"
        }, 
        {
            "location": "/genomics/", 
            "text": "Overview\n\n\nThis section contains tutorials for basic microbial genomics analyses in\nGalaxy.  These have been designed to be done sequentially.\n\n\n\n\n\n\nUse the Galaxy Platform\n:\na web-based interface for bioinformatic analyses.\n\n\n\n\n\n\nImport tutorial data to Galaxy\n: \na set of files to use in these introductory tutorials.\n\n\n\n\n\n\nQuality control of Illumina data\n:\nassess raw Illumina data for quality issues.\n\n\n\n\n\n\nAssemble a genome with Spades\n:\nassemble raw Illumina sequence reads into a draft bacterial genome sequence\nusing the tool \nSpades\n.\n\n\n\n\n\n\nAnnotate a genome with Prokka\n:\ndescribe the type and location of proteins and other features on the draft\nbacterial genome sequence using the tool \nProkka\n.\n\n\n\n\n\n\nFind variants with Snippy\n:\nidentify differences (such as nucleotide mutations) between genomes using\nthe tool \nSnippy\n.", 
            "title": "Overview"
        }, 
        {
            "location": "/genomics/#overview", 
            "text": "This section contains tutorials for basic microbial genomics analyses in\nGalaxy.  These have been designed to be done sequentially.    Use the Galaxy Platform :\na web-based interface for bioinformatic analyses.    Import tutorial data to Galaxy : \na set of files to use in these introductory tutorials.    Quality control of Illumina data :\nassess raw Illumina data for quality issues.    Assemble a genome with Spades :\nassemble raw Illumina sequence reads into a draft bacterial genome sequence\nusing the tool  Spades .    Annotate a genome with Prokka :\ndescribe the type and location of proteins and other features on the draft\nbacterial genome sequence using the tool  Prokka .    Find variants with Snippy :\nidentify differences (such as nucleotide mutations) between genomes using\nthe tool  Snippy .", 
            "title": "Overview"
        }, 
        {
            "location": "/modules/galaxy/", 
            "text": "Using Galaxy\n\n\nBackground\n\n\nGalaxy is a web-based analysis and workflow platform designed for biologists to analyse their own data. It can be used to run a variety of bioinformatics tools. The selection of bioinformatics tools installed on the Galaxy instance we are using today caters for the analysis of bacterial genomics data sets.\n\n\nBioinformatics tools can be added from the Galaxy \u2018tool shed\u2019 or removed as necessary from your Galaxy instance.\n\n\nGalaxy is an open, web-based platform. Details about the project can be found \nhere\n.\n\n\nThe Galaxy interface is separated into three parts. The \nTools\n list on the left, the \nViewing\n panel in the middle and the analysis and data \nHistory\n on the right. We will be looking at all three parts in this tutorial.\n\n\n\n\nThis activity will familiarise you with the Galaxy interface. It will cover the following operations:\n\n\n\n\nLogging in to the server\n\n\nPutting data onto Galaxy\n\n\nUsing some common tools\n\n\n\n\nLearning Objectives\n\n\nAt the end of this tutorial you should be able to:\n\n\n\n\nRegister and login to a Galaxy server.\n\n\nUpload data to a Galaxy server from:\n\n\nA file on your local computer.\n\n\nA file on a remote datastore with an accessible URL.  \n\n\n\n\n\n\nUse tools in Galaxy by:\n\n\nAccessing the tool via the tool menu.\n\n\nUsing the tool interface to run the particular tool.\n\n\nViewing/accessing the tool output.\n\n\n\n\n\n\n\n\nLogin to Galaxy\n\n\nOpen a new tab or window on your web browser. Use Firefox or Chrome - please don\u2019t use Internet Explorer or Safari.\n\n\nIn the address bar, type in the address of your galaxy server. Alternatively, you can access galaxy via the dashboard of your mGVL.\n\n\n\n\nClick on \nUser\n button on the right and either register or login.\n\n\n\n\nIf you haven\nt yet registered yet:\n\n\n\n\nSelect: \nUser \n Register\n\n\nEnter your email, choose a password, and choose a user name.\n\n\nClick \nSubmit\n\n\n\n\nIf you have already registered:\n\n\n\n\nSelect: \nUser \n Login\n\n\nEnter your username \n password.\n\n\nClick \nSubmit\n\n\n\n\nPut data onto Galaxy\n\n\nThere are two main ways to put your data onto Galaxy; this section will run through both ways. First, we need to make a new history.\n\n\nMake a new history\n\n\nFirst, make a new folder to store the work we are about to perform.\n\n\n\n\nClick on the history options button \n at the top of the \nHistory\n panel.\n\n\nSelect \nCreate New\n\n\nClick on \nUnnamed history\n to rename. Type in a new name.\n\n\n\n\nDatatypes\n\n\nWhat sort of file is being uploaded?\n\n\nWe need to tell Galaxy what sort of file is being uploaded. Some common datatypes (file formats) are: text, FASTA, FASTQ, VCF, GFF, GBK, and tabular.\n\n\nUpload a file from your own computer\n\n\nWith this method you can get most of the files on your own computer into Galaxy.\n\n\nFirst, download the following file to your computer:\n\n\n\n\nCopy this URL and paste it into the address bar in your web browser: \nhttps://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/galaxy101/Contig_stats.txt.gz\n\nThis is a file stored on the cloud. Press \nEnter\n, and the file will download. Note the download location.\n\n\n\n\n\n\n\n\n\n\nNext, upload that file to Galaxy\n\n\n\n\nFrom the Galaxy tool panel, click on \nGet Data \n Upload File\n  \n\n\nClick the \nChoose local file\n button  \n\n\nFind and select the \nContig_stats.txt.gz\n file you downloaded and click \nOpen\n  \n\n\nSet the \nType\n to \ntabular\n  \n\n\nClick the \nStart\n button  \n\n\nOnce the progress bar reaches 100%, click the \nClose\n button  \n\n\nThe file will now upload to your current history.\n\n\n\n\nUpload a file from a URL\n\n\nIf a file exists on a web resource somewhere and you know its URL (Unique Resource Location - a web address) you can directly load it into Galaxy.\n\n\n\n\nFrom the tool panel, click on \nGet Data \n Upload File\n\n\nClick on the \nPaste/Fetch Data\n button\n\n\nCopy and paste the following web address into the URL/Text box:\n\nhttps://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/COMP90014/Assignment1/bacterial_std_err_1.fastq.gz\n\n\nSet the \nType\n to \nfastqsanger\n (CAREFUL: not fastqCsanger)\n\n\nClick \nStart\n\n\nOnce the progress bar has reached 100%, click \nClose\n.\n\n\nNote that Galaxy is smart enough to recognize that this is a compressed file and so it will uncompress it as it loads it.\n\n\n\n\nUpload another file from a URL\n\n\nNow we are going to upload another file from the remote data source.\n\n\n\n\nRepeat the above for: https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/MRSA0252.fna\n\n\nNote: this file \nType\n is \nFASTA\n.\n\n\nThe DNA sequence of \nStaphylococcus aureus MRSA252\n will be loaded into your history as a FASTA file.\n\n\nYour \nHistory\n should now look like this:\n\n\n\n\n\n\nThe data\n\n\nA brief description of each of the three files uploaded to Galaxy:  \n\n\nContigs_stats.txt\n  \n\n\n\n\nthis file contains a table of summary data from a \nde novo\n genome assembly (the process of attempting to recover the full genome of an organism from the short read sequences produced by most DNA sequencing machines).\n\n\nThe columns contain a lot of information but the ones we will be using indicate the amount of data (or coverage) that went into making up each piece of the final assembly.\n\n\n\n\nbacterial_std_err_1.fastq.gz\n  \n\n\n\n\nThis file contains sequence reads, in the format produced by Illumina sequencing machines. Read more about the\n\nFASTQ\n format at Wikipedia.\n\n\n\n\nMRSA0252.fna\n\n\n\n\nThis file contains the genome sequence of \nStaphylococcus aureus MRSA252\n. Read more about the \nFASTA\n format at Wikipedia.\n\n\n\n\nGalaxy tools\n\n\nThe purpose of this section is to help you become familiar with the way\ntools are run on Galaxy.\n\n\nWe will see how to:\n\n\n\n\nrename files\n\n\nsummarize assembly statistics\n\n\nconvert file formats, and\n\n\nfind features in a DNA sequence.\n\n\n\n\nRename files\n\n\nTwo of the files in the \nHistory\n have very long and confusing names. File names can be changed by taking the following steps:\n\n\n\n\nClick on the edit icon \n next to the file in the \nHistory\n called: \nhttps://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/COMP90014/Assignment1/bacterial_std_err_1.fastq\n\n\nIn the \nName\n text box, give it a new name. Rename it to: \ntypical.fastq\n\n\nClick the \nSave\n button.\n\n\n\n\nRepeat the process with another file:\n\n\n\n\nFind the file called: \nhttps://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/MRSA0252.fna\n  \n\n\nRename it to \nMRSA252.fna\n\n\n\n\nMuch better. There is other functionality hidden behind that edit icon \n\n\nYou can change a file\u2019s datatype, convert its format and many other things. Feel free to play around with them at a later date.\n\n\nSummarize assembly statistics\n\n\nWe are going to produce a histogram of contig read-coverage depths and calculate the summary statistics from the \nContig_stats.txt\n file.\n\n\nTo do this we need to make some changes to the \nContig_stats.txt\n file:\n\n\n\n\ncut out a couple of columns from the file\n\n\nremove a line from the file\n\n\nproduce a histogram\n\n\n\n\nCut out and keep two columns\n\n\n\n\nClick on the eye icon \n of the \nContig_stats.txt\n file to have a look at it.  \n\n\nNote that there are 18 columns in this file. We want column 1 and column 6.\n\n\nGo to \nTools \n Text Manipulation \n Cut\n and set the following:\n\n\nSet \nCut Columns\n to: \nc1,c6\n\n\nDelimited by\n: \nTab\n\n\nFrom\n: \nContig_stats.txt\n\n\nClick \nExecute\n\n\nExamine the new file by clicking on its eye icon \n. We now have 2 columns instead of the 18 in the original file.\n\n\n\n\nRemove the Header lines of the new file\n\n\n\n\nGo to \nTools \n Text Manipulation \n Remove beginning\n and set the following:\n\n\nRemove First\n: \n1\n\n\nfrom\n: \nCut on data1\n\n\nclick \nExecute\n\n\nNote the the new file is the same as the previous one without the header line.\n\n\n\n\nMake a histogram\n\n\n\n\nGo to \nTools \n Graph/Display Data \n Histogram\n and set the following:\n\n\nDataset\n: \nRemove beginning on Data 4\n\n\nNumerical column for X axis\n Column: 2\n\n\nNumber of breaks\n: \n25\n\n\nPlot title\n: \nHistogram of Contig Coverage\n\n\nLabel for X axis\n: \nCoverage depth\n\n\nClick \nExecute\n\n\nClick on the eye icon \n of the histogram to have a look at it. Note there are a few peaks. Maybe these correspond to single, double and triple copy number of these contigs.\n\n\n\n\nCalculate summary statistics for contig coverage depth\n\n\n\n\nGo to \nTools \n Statistics and Visualisation \n Statistics \n Summary Statisitics\n and set the following:  \n\n\nSummary statistics on\n: \nRemove beginning on Data 4\n\n\nColumn or expression\n: \nc2\n\n\nClick \nExecute\n\n\nYou\u2019ll note that the summary statistics tool failed (red background in the \nHistory\n). There was an error!\n\n\nIf you click on the filename, and then the bug symbol \n, it will tell you what went wrong. (There is a missing python library).\n\n\nAt this point, you would normally contact your Galaxy server administrator.\n\n\n\n\nConvert file formats\n\n\nThis shows how to convert a FASTQ file to a FASTA file. The tool creates a new file with the converted data.\n\n\n\n\nGo to \nTools \n Basic Tools \n Convert Formats \n FASTQ to FASTA\n and set the following:\n\n\nFASTQ file to convert\n: \ntypical.fastq\n\n\nClick \nExecute\n\n\nThe output is a new Fasta file called \nFASTQ to FASTA on data 2\n.\n\n\n\n\nFind features\n\n\nThis example shows how to use a tool called \u201cbarrnap\u201d to search for rRNAs in a DNA sequence.\n\n\nFind all of the ribosomal RNAs in a sequence\n\n\n\n\nGo to \nTools \n NGS Analysis \n NGS: Annotation \n barrnap\n and set the following:\n\n\nFasta file\n: \nMRSA252.fna\n\n\nClick \nExecute\n\n\nThe output is \nbarrnap on data 3\n It is a gff3 format file (general feature format version 3). Each line in the file describes a feature in the DNA sequence.\n\n\n\n\nFilter the annotations to get the 23S RNAs\n\n\n\n\nMake a file with only the 23S rRNA features\n\n\nGo to \nTools \n Basic Tools \n Filter and Sort \n Select\n and set the following:\n\n\nSelect lines from\n: (whatever you called the barrnap gff3 output)\n\n\nthe pattern\n: \n23S\n (this will look for all the lines in the file that contain \u201c23S\u201d)\n\n\nClick \nExecute\n\n\nNow you have a gff3 file with just the 23S annotations!\n\n\n\n\nWhat next?\n\n\n\n\n\n\nRemember how we started a new \nHistory\n at the beginning? If you want to see any of your old histories, click on the History options button \n at the top of the \nHistory\n panel and then select \u201cSaved Histories.\u201d This will give you a list of all the histories you have worked on in this Galaxy server.\n\n\n\n\n\n\nUpload a saved Galaxy history (a set of files) to use in these tutorials\n.", 
            "title": "Using Galaxy"
        }, 
        {
            "location": "/modules/galaxy/#using-galaxy", 
            "text": "", 
            "title": "Using Galaxy"
        }, 
        {
            "location": "/modules/galaxy/#background", 
            "text": "Galaxy is a web-based analysis and workflow platform designed for biologists to analyse their own data. It can be used to run a variety of bioinformatics tools. The selection of bioinformatics tools installed on the Galaxy instance we are using today caters for the analysis of bacterial genomics data sets.  Bioinformatics tools can be added from the Galaxy \u2018tool shed\u2019 or removed as necessary from your Galaxy instance.  Galaxy is an open, web-based platform. Details about the project can be found  here .  The Galaxy interface is separated into three parts. The  Tools  list on the left, the  Viewing  panel in the middle and the analysis and data  History  on the right. We will be looking at all three parts in this tutorial.   This activity will familiarise you with the Galaxy interface. It will cover the following operations:   Logging in to the server  Putting data onto Galaxy  Using some common tools", 
            "title": "Background"
        }, 
        {
            "location": "/modules/galaxy/#learning-objectives", 
            "text": "At the end of this tutorial you should be able to:   Register and login to a Galaxy server.  Upload data to a Galaxy server from:  A file on your local computer.  A file on a remote datastore with an accessible URL.      Use tools in Galaxy by:  Accessing the tool via the tool menu.  Using the tool interface to run the particular tool.  Viewing/accessing the tool output.", 
            "title": "Learning Objectives"
        }, 
        {
            "location": "/modules/galaxy/#login-to-galaxy", 
            "text": "Open a new tab or window on your web browser. Use Firefox or Chrome - please don\u2019t use Internet Explorer or Safari.  In the address bar, type in the address of your galaxy server. Alternatively, you can access galaxy via the dashboard of your mGVL.   Click on  User  button on the right and either register or login.   If you haven t yet registered yet:   Select:  User   Register  Enter your email, choose a password, and choose a user name.  Click  Submit   If you have already registered:   Select:  User   Login  Enter your username   password.  Click  Submit", 
            "title": "Login to Galaxy"
        }, 
        {
            "location": "/modules/galaxy/#put-data-onto-galaxy", 
            "text": "There are two main ways to put your data onto Galaxy; this section will run through both ways. First, we need to make a new history.", 
            "title": "Put data onto Galaxy"
        }, 
        {
            "location": "/modules/galaxy/#make-a-new-history", 
            "text": "First, make a new folder to store the work we are about to perform.   Click on the history options button   at the top of the  History  panel.  Select  Create New  Click on  Unnamed history  to rename. Type in a new name.", 
            "title": "Make a new history"
        }, 
        {
            "location": "/modules/galaxy/#datatypes", 
            "text": "What sort of file is being uploaded?  We need to tell Galaxy what sort of file is being uploaded. Some common datatypes (file formats) are: text, FASTA, FASTQ, VCF, GFF, GBK, and tabular.", 
            "title": "Datatypes"
        }, 
        {
            "location": "/modules/galaxy/#upload-a-file-from-your-own-computer", 
            "text": "With this method you can get most of the files on your own computer into Galaxy.", 
            "title": "Upload a file from your own computer"
        }, 
        {
            "location": "/modules/galaxy/#first-download-the-following-file-to-your-computer", 
            "text": "Copy this URL and paste it into the address bar in your web browser:  https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/galaxy101/Contig_stats.txt.gz \nThis is a file stored on the cloud. Press  Enter , and the file will download. Note the download location.", 
            "title": "First, download the following file to your computer:"
        }, 
        {
            "location": "/modules/galaxy/#next-upload-that-file-to-galaxy", 
            "text": "From the Galaxy tool panel, click on  Get Data   Upload File     Click the  Choose local file  button    Find and select the  Contig_stats.txt.gz  file you downloaded and click  Open     Set the  Type  to  tabular     Click the  Start  button    Once the progress bar reaches 100%, click the  Close  button    The file will now upload to your current history.", 
            "title": "Next, upload that file to Galaxy"
        }, 
        {
            "location": "/modules/galaxy/#upload-a-file-from-a-url", 
            "text": "If a file exists on a web resource somewhere and you know its URL (Unique Resource Location - a web address) you can directly load it into Galaxy.   From the tool panel, click on  Get Data   Upload File  Click on the  Paste/Fetch Data  button  Copy and paste the following web address into the URL/Text box: https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/COMP90014/Assignment1/bacterial_std_err_1.fastq.gz  Set the  Type  to  fastqsanger  (CAREFUL: not fastqCsanger)  Click  Start  Once the progress bar has reached 100%, click  Close .  Note that Galaxy is smart enough to recognize that this is a compressed file and so it will uncompress it as it loads it.", 
            "title": "Upload a file from a URL"
        }, 
        {
            "location": "/modules/galaxy/#upload-another-file-from-a-url", 
            "text": "Now we are going to upload another file from the remote data source.   Repeat the above for: https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/MRSA0252.fna  Note: this file  Type  is  FASTA .  The DNA sequence of  Staphylococcus aureus MRSA252  will be loaded into your history as a FASTA file.  Your  History  should now look like this:", 
            "title": "Upload another file from a URL"
        }, 
        {
            "location": "/modules/galaxy/#the-data", 
            "text": "A brief description of each of the three files uploaded to Galaxy:    Contigs_stats.txt      this file contains a table of summary data from a  de novo  genome assembly (the process of attempting to recover the full genome of an organism from the short read sequences produced by most DNA sequencing machines).  The columns contain a lot of information but the ones we will be using indicate the amount of data (or coverage) that went into making up each piece of the final assembly.   bacterial_std_err_1.fastq.gz      This file contains sequence reads, in the format produced by Illumina sequencing machines. Read more about the FASTQ  format at Wikipedia.   MRSA0252.fna   This file contains the genome sequence of  Staphylococcus aureus MRSA252 . Read more about the  FASTA  format at Wikipedia.", 
            "title": "The data"
        }, 
        {
            "location": "/modules/galaxy/#galaxy-tools", 
            "text": "The purpose of this section is to help you become familiar with the way\ntools are run on Galaxy.  We will see how to:   rename files  summarize assembly statistics  convert file formats, and  find features in a DNA sequence.", 
            "title": "Galaxy tools"
        }, 
        {
            "location": "/modules/galaxy/#rename-files", 
            "text": "Two of the files in the  History  have very long and confusing names. File names can be changed by taking the following steps:   Click on the edit icon   next to the file in the  History  called:  https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/COMP90014/Assignment1/bacterial_std_err_1.fastq  In the  Name  text box, give it a new name. Rename it to:  typical.fastq  Click the  Save  button.   Repeat the process with another file:   Find the file called:  https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/MRSA0252.fna     Rename it to  MRSA252.fna   Much better. There is other functionality hidden behind that edit icon   You can change a file\u2019s datatype, convert its format and many other things. Feel free to play around with them at a later date.", 
            "title": "Rename files"
        }, 
        {
            "location": "/modules/galaxy/#summarize-assembly-statistics", 
            "text": "We are going to produce a histogram of contig read-coverage depths and calculate the summary statistics from the  Contig_stats.txt  file.  To do this we need to make some changes to the  Contig_stats.txt  file:   cut out a couple of columns from the file  remove a line from the file  produce a histogram", 
            "title": "Summarize assembly statistics"
        }, 
        {
            "location": "/modules/galaxy/#cut-out-and-keep-two-columns", 
            "text": "Click on the eye icon   of the  Contig_stats.txt  file to have a look at it.    Note that there are 18 columns in this file. We want column 1 and column 6.  Go to  Tools   Text Manipulation   Cut  and set the following:  Set  Cut Columns  to:  c1,c6  Delimited by :  Tab  From :  Contig_stats.txt  Click  Execute  Examine the new file by clicking on its eye icon  . We now have 2 columns instead of the 18 in the original file.", 
            "title": "Cut out and keep two columns"
        }, 
        {
            "location": "/modules/galaxy/#remove-the-header-lines-of-the-new-file", 
            "text": "Go to  Tools   Text Manipulation   Remove beginning  and set the following:  Remove First :  1  from :  Cut on data1  click  Execute  Note the the new file is the same as the previous one without the header line.", 
            "title": "Remove the Header lines of the new file"
        }, 
        {
            "location": "/modules/galaxy/#make-a-histogram", 
            "text": "Go to  Tools   Graph/Display Data   Histogram  and set the following:  Dataset :  Remove beginning on Data 4  Numerical column for X axis  Column: 2  Number of breaks :  25  Plot title :  Histogram of Contig Coverage  Label for X axis :  Coverage depth  Click  Execute  Click on the eye icon   of the histogram to have a look at it. Note there are a few peaks. Maybe these correspond to single, double and triple copy number of these contigs.", 
            "title": "Make a histogram"
        }, 
        {
            "location": "/modules/galaxy/#calculate-summary-statistics-for-contig-coverage-depth", 
            "text": "Go to  Tools   Statistics and Visualisation   Statistics   Summary Statisitics  and set the following:    Summary statistics on :  Remove beginning on Data 4  Column or expression :  c2  Click  Execute  You\u2019ll note that the summary statistics tool failed (red background in the  History ). There was an error!  If you click on the filename, and then the bug symbol  , it will tell you what went wrong. (There is a missing python library).  At this point, you would normally contact your Galaxy server administrator.", 
            "title": "Calculate summary statistics for contig coverage depth"
        }, 
        {
            "location": "/modules/galaxy/#convert-file-formats", 
            "text": "This shows how to convert a FASTQ file to a FASTA file. The tool creates a new file with the converted data.   Go to  Tools   Basic Tools   Convert Formats   FASTQ to FASTA  and set the following:  FASTQ file to convert :  typical.fastq  Click  Execute  The output is a new Fasta file called  FASTQ to FASTA on data 2 .", 
            "title": "Convert file formats"
        }, 
        {
            "location": "/modules/galaxy/#find-features", 
            "text": "This example shows how to use a tool called \u201cbarrnap\u201d to search for rRNAs in a DNA sequence.", 
            "title": "Find features"
        }, 
        {
            "location": "/modules/galaxy/#find-all-of-the-ribosomal-rnas-in-a-sequence", 
            "text": "Go to  Tools   NGS Analysis   NGS: Annotation   barrnap  and set the following:  Fasta file :  MRSA252.fna  Click  Execute  The output is  barrnap on data 3  It is a gff3 format file (general feature format version 3). Each line in the file describes a feature in the DNA sequence.", 
            "title": "Find all of the ribosomal RNAs in a sequence"
        }, 
        {
            "location": "/modules/galaxy/#filter-the-annotations-to-get-the-23s-rnas", 
            "text": "Make a file with only the 23S rRNA features  Go to  Tools   Basic Tools   Filter and Sort   Select  and set the following:  Select lines from : (whatever you called the barrnap gff3 output)  the pattern :  23S  (this will look for all the lines in the file that contain \u201c23S\u201d)  Click  Execute  Now you have a gff3 file with just the 23S annotations!", 
            "title": "Filter the annotations to get the 23S RNAs"
        }, 
        {
            "location": "/modules/galaxy/#what-next", 
            "text": "Remember how we started a new  History  at the beginning? If you want to see any of your old histories, click on the History options button   at the top of the  History  panel and then select \u201cSaved Histories.\u201d This will give you a list of all the histories you have worked on in this Galaxy server.    Upload a saved Galaxy history (a set of files) to use in these tutorials .", 
            "title": "What next?"
        }, 
        {
            "location": "/modules/data-dna/", 
            "text": "Dataset\n\n\nGalaxy histories\n\n\n\n\nGalaxy history of input files\n\n\nGalaxy history: FastQC\n\n\nGalaxy history: Spades\n\n\nGalaxy history: Prokka\n\n\nGalaxy history: Snippy\n\n\n\n\nIndividual input files\n\n\nWildtype reference\n\n\n\n\nwildtype.fna\n\n\nwildtype.gbk\n\n\nwildtype.gff\n\n\n\n\nMutant Illumina sequence\n\n\n\n\nmutant_R1.fastq.gz\n\n\nmutant_R2.fastq.gz\n\n\n\n\nGet tutorial data into Galaxy\n\n\nTo get the saved tutorial history (a set of files) into Galaxy:\n\n\n\n\nRight-click on \nGalaxy history of input files\n above and copy link address.\n\n\nGo to your Galaxy instance. Make sure you are registered and logged in. Refresh the page.\n\n\nClick on the \nHistory\n cog \n\n\nSelect \nImport from File\n\n\n\n\n\n\n\n\nIn the box called \nArchived History URL\n, paste in the link address to the Galaxy history.\n\n\nClick \nSubmit\n\n\nWait a few seconds.\n\n\nClick on the \nview all histories\n button \n\n\nSee if the Galaxy history has been imported: it will be called \nimported from archive: Data\n\n\nAbove that pane, click on the \nSwitch to\n button.\n\n\nThen click \nDone\n (in the top left corner).\n\n\nYou should now have a list of five files in your current history.\n\n\n\n\n\n\nWhat next?\n\n\n\n\nIf you are are working through the tutorials in a different order or want to see the completed history for another section, additional Galaxy histories are available above.\n\n\nNext: \nLearn about quality control\n.", 
            "title": "Training dataset"
        }, 
        {
            "location": "/modules/data-dna/#dataset", 
            "text": "", 
            "title": "Dataset"
        }, 
        {
            "location": "/modules/data-dna/#galaxy-histories", 
            "text": "Galaxy history of input files  Galaxy history: FastQC  Galaxy history: Spades  Galaxy history: Prokka  Galaxy history: Snippy", 
            "title": "Galaxy histories"
        }, 
        {
            "location": "/modules/data-dna/#individual-input-files", 
            "text": "", 
            "title": "Individual input files"
        }, 
        {
            "location": "/modules/data-dna/#wildtype-reference", 
            "text": "wildtype.fna  wildtype.gbk  wildtype.gff", 
            "title": "Wildtype reference"
        }, 
        {
            "location": "/modules/data-dna/#mutant-illumina-sequence", 
            "text": "mutant_R1.fastq.gz  mutant_R2.fastq.gz", 
            "title": "Mutant Illumina sequence"
        }, 
        {
            "location": "/modules/data-dna/#get-tutorial-data-into-galaxy", 
            "text": "To get the saved tutorial history (a set of files) into Galaxy:   Right-click on  Galaxy history of input files  above and copy link address.  Go to your Galaxy instance. Make sure you are registered and logged in. Refresh the page.  Click on the  History  cog   Select  Import from File     In the box called  Archived History URL , paste in the link address to the Galaxy history.  Click  Submit  Wait a few seconds.  Click on the  view all histories  button   See if the Galaxy history has been imported: it will be called  imported from archive: Data  Above that pane, click on the  Switch to  button.  Then click  Done  (in the top left corner).  You should now have a list of five files in your current history.", 
            "title": "Get tutorial data into Galaxy"
        }, 
        {
            "location": "/modules/data-dna/#what-next", 
            "text": "If you are are working through the tutorials in a different order or want to see the completed history for another section, additional Galaxy histories are available above.  Next:  Learn about quality control .", 
            "title": "What next?"
        }, 
        {
            "location": "/modules/fastqc/", 
            "text": "FastQC in Galaxy\n\n\n\n\n\nAfter sequencing, the reads should be checked for their quality. This tutorial demonstrates how to use the tool called FastQC to examine bacterial paired-end Illumina sequence reads. The FastQC website is \nhere.\n\n\nLearning Objectives\n\n\nAt the end of this tutorial you should be able to:\n\n\n\n\nrun FastQC on input sequence reads, and\n\n\nexamine the FastQC output.\n\n\n\n\nInput files\n\n\n\n\nWe will use the paired-end read set from our Galaxy history.\n\n\nThese are the files \nmutant_R1.fastq\n and \nmutant_R2.fastq\n.\n\n\nIf you don\nt have these FASTQ files in your current Galaxy history see how to get them \nhere\n.\n\n\nFASTQ is a file format for sequence reads that displays quality scores for each of the sequenced nucleotides. For more information about FASTQ format see this \nlink\n.\n\n\nWe will evaluate the \nmutant_R1.fastq\n reads using the FastQC tool.\n\n\n\n\nRun FastQC\n\n\n\n\nGo to \nTools \n NGS:Analysis \n NGS: QC and Manipulation \n FastQC\n\n\n\n\n\n\n\n\nfor \nShort read data from your current history\n: \nmutant_R1.fastq\n\n\nClick \nExecute\n\n\n\n\nExamine output files\n\n\nOnce finished, examine the output called \nFastQC on data1:webpage\n (Hint: click the eye icon). It has a summary at the top of the page and a number of graphs.\n\n\nLook at:\n\n\n\n\n\n\nBasic Statistics\n\n\n\n\nSequence length\n: will be important in setting maximum k-mer size value for assembly.\n\n\nEncoding\n: The quality encoding type is important for quality trimming software.\n\n\n% GC\n: high GC organisms don\u2019t tend to assemble well and may have an uneven read coverage distribution.\n\n\nTotal sequences\n: Total number of reads: gives you an idea of coverage.\n\n\n\n\n\n\n\n\nPer base sequence quality\n: Dips in quality near the beginning, middle or end of the reads: determines possible trimming/cleanup methods and parameters and may indicate technical problems with the sequencing process/machine run. In this case, all the reads are of relatively high quality across their length (150 bp).\n\n\n\n\n\n\n\n\n\n\n\n\nPer base N content\n: Presence of large numbers of Ns in reads may point to a poor quality sequencing run. You would need to trim these reads to remove Ns.\n\n\n\n\n\n\nKmer content\n: Presence of highly recurring k-mers: may point to contamination of reads with barcodes, adapter sequences etc. In this case, we have spikes in two types of kmers. \n\n\n\n\n\n\n\n\nWe have warnings for two outputs (per base sequence content; Kmer content). This would warrant more investigation.\n\n\nGeneral questions you might ask about your input reads include:\n\n\n\n\nHow good is my read set?\n\n\nDo I need to ask for a new sequencing run?  \n\n\nIs it suitable for the analysis I need to do?\n\n\n\n\nFor a fuller discussion of FastQC outputs and warnings, see the \nFastQC website link\n, including the section on each of the output \nreports\n, and examples of \ngood\n and \nbad\n Illumina data.\n\n\nWhat Next?\n\n\nAssemble the reads into a draft genome sequence\n.", 
            "title": "Quality control"
        }, 
        {
            "location": "/modules/fastqc/#fastqc-in-galaxy", 
            "text": "After sequencing, the reads should be checked for their quality. This tutorial demonstrates how to use the tool called FastQC to examine bacterial paired-end Illumina sequence reads. The FastQC website is  here.", 
            "title": "FastQC in Galaxy"
        }, 
        {
            "location": "/modules/fastqc/#learning-objectives", 
            "text": "At the end of this tutorial you should be able to:   run FastQC on input sequence reads, and  examine the FastQC output.", 
            "title": "Learning Objectives"
        }, 
        {
            "location": "/modules/fastqc/#input-files", 
            "text": "We will use the paired-end read set from our Galaxy history.  These are the files  mutant_R1.fastq  and  mutant_R2.fastq .  If you don t have these FASTQ files in your current Galaxy history see how to get them  here .  FASTQ is a file format for sequence reads that displays quality scores for each of the sequenced nucleotides. For more information about FASTQ format see this  link .  We will evaluate the  mutant_R1.fastq  reads using the FastQC tool.", 
            "title": "Input files"
        }, 
        {
            "location": "/modules/fastqc/#run-fastqc", 
            "text": "Go to  Tools   NGS:Analysis   NGS: QC and Manipulation   FastQC     for  Short read data from your current history :  mutant_R1.fastq  Click  Execute", 
            "title": "Run FastQC"
        }, 
        {
            "location": "/modules/fastqc/#examine-output-files", 
            "text": "Once finished, examine the output called  FastQC on data1:webpage  (Hint: click the eye icon). It has a summary at the top of the page and a number of graphs.  Look at:    Basic Statistics   Sequence length : will be important in setting maximum k-mer size value for assembly.  Encoding : The quality encoding type is important for quality trimming software.  % GC : high GC organisms don\u2019t tend to assemble well and may have an uneven read coverage distribution.  Total sequences : Total number of reads: gives you an idea of coverage.     Per base sequence quality : Dips in quality near the beginning, middle or end of the reads: determines possible trimming/cleanup methods and parameters and may indicate technical problems with the sequencing process/machine run. In this case, all the reads are of relatively high quality across their length (150 bp).       Per base N content : Presence of large numbers of Ns in reads may point to a poor quality sequencing run. You would need to trim these reads to remove Ns.    Kmer content : Presence of highly recurring k-mers: may point to contamination of reads with barcodes, adapter sequences etc. In this case, we have spikes in two types of kmers.      We have warnings for two outputs (per base sequence content; Kmer content). This would warrant more investigation.  General questions you might ask about your input reads include:   How good is my read set?  Do I need to ask for a new sequencing run?    Is it suitable for the analysis I need to do?   For a fuller discussion of FastQC outputs and warnings, see the  FastQC website link , including the section on each of the output  reports , and examples of  good  and  bad  Illumina data.", 
            "title": "Examine output files"
        }, 
        {
            "location": "/modules/fastqc/#what-next", 
            "text": "Assemble the reads into a draft genome sequence .", 
            "title": "What Next?"
        }, 
        {
            "location": "/modules/spades/", 
            "text": "Assembly using Spades\n\n\nBackground\n\n\nSpades is one of a number of \nde novo\n assemblers that use short read sets as input (e.g. Illumina Reads), and the assembly method is based on de Bruijn graphs. For information about Spades see this \nlink\n.\n\n\n\n\n\nIn this activity, we will perform a \nde novo\n assembly of a short read set using the Spades assembler. The output from Spades that we are interested in is a multiFASTA file that contains the draft genome sequence.\n\n\n\n\n\nLearning objectives\n\n\nAt the end of this tutorial you should be able to:\n\n\n\n\n\n\n\nassemble the reads using Spades, and\n\n\nexamine the output assembly.\n\n\n\n\n\n\n\nImport and view data\n\n\nIf you have completed the previous tutorial on \nQuality Control\n, you should already have the required files in your current Galaxy history. If not, see how to get them \nhere\n.\n\n\n\n\nThe read set for today is from an imaginary \nStaphylococcus aureus\n bacterium with a miniature genome.\n\n\n\n\nThe whole genome shotgun method used to sequence our mutant strain read set was produced on an Illumina DNA sequencing instrument.\n\n\n\n\n\n\nThe files we need for assembly are the \nmutant_R1.fastq\n and \nmutant_R2.fastq\n.\n\n\n\n\n\n\n(We don\nt need the reference genome sequences for this tutorial).\n\n\n\n\n\n\nThe reads are paired-end.\n\n\n\n\n\n\nEach read is 150 bases long. \n\n\n\n\n\n\nThe number of bases sequenced is equivalent to 19x the genome sequence of the wildtype strain. (Read coverage 19x - rather low!).\n\n\n\n\n\n\n\n\n\n\n\nClick on the View Data button (the \n) next to one of the FASTQ sequence files.\n\n\n\n\n\n\n\nAssemble reads with Spades\n\n\n\n\nWe will perform a \nde novo\n assembly of the mutant FASTQ reads into long contiguous sequences (in FASTA format.)\n\n\n\n\n\n\n\n\n\nGo to \nTools \n NGS Analysis \n NGS: Assembly \n spades\n\n\n\n\nSet the following parameters (leave other settings as they are):\n\n\n\n\nRun only Assembly\n: \nYes\n [the \nYes\n button should be darker grey]\n\n\nKmers to use separated by commas:\n \n33,55,91\n  [note: no spaces]  \n\n\nCoverage cutoff:\n \nauto\n  \n\n\nFiles \n Forward reads:\n \nmutant_R1.fastq\n  \n\n\nFiles \n Reverse reads:\n \nmutant_R2.fastq\n  \n\n\n\n\n\n\n\n\nYour tool interface should look like this:\n\n\n\n\n\n\n\n\n\n\nClick \nExecute\n\n\n\n\nExamine the output\n\n\n\n\nGalaxy is now running Spades on the reads for you.\n\n\n\n\nWhen it is finished, you will have five new files in your history.  \n\n\n\n\ntwo FASTA files of the resulting contigs and scaffolds\n\n\ntwo files for statistics about these\n\n\nthe Spades logfile\n\n\n\n\n\n\n\n\n\n\n\n\nClick on the View Data button \n on each of the files.\n\n\nNote that the short reads have been assembled into much longer contigs.\n\n\n(However, in this case, the contigs have not been assembled into larger scaffolds.)\n\n\nThe stats files will give you the length of each of the contigs.\n\n\n\n\n\n\nWhat next?\n\n\n\n\nAnnotate the genome using Prokka.", 
            "title": "Genome assembly"
        }, 
        {
            "location": "/modules/spades/#assembly-using-spades", 
            "text": "", 
            "title": "Assembly using Spades"
        }, 
        {
            "location": "/modules/spades/#background", 
            "text": "Spades is one of a number of  de novo  assemblers that use short read sets as input (e.g. Illumina Reads), and the assembly method is based on de Bruijn graphs. For information about Spades see this  link .   In this activity, we will perform a  de novo  assembly of a short read set using the Spades assembler. The output from Spades that we are interested in is a multiFASTA file that contains the draft genome sequence.", 
            "title": "Background"
        }, 
        {
            "location": "/modules/spades/#learning-objectives", 
            "text": "At the end of this tutorial you should be able to:    assemble the reads using Spades, and  examine the output assembly.", 
            "title": "Learning objectives"
        }, 
        {
            "location": "/modules/spades/#import-and-view-data", 
            "text": "If you have completed the previous tutorial on  Quality Control , you should already have the required files in your current Galaxy history. If not, see how to get them  here .   The read set for today is from an imaginary  Staphylococcus aureus  bacterium with a miniature genome.   The whole genome shotgun method used to sequence our mutant strain read set was produced on an Illumina DNA sequencing instrument.    The files we need for assembly are the  mutant_R1.fastq  and  mutant_R2.fastq .    (We don t need the reference genome sequences for this tutorial).    The reads are paired-end.    Each read is 150 bases long.     The number of bases sequenced is equivalent to 19x the genome sequence of the wildtype strain. (Read coverage 19x - rather low!).      Click on the View Data button (the  ) next to one of the FASTQ sequence files.", 
            "title": "Import and view data"
        }, 
        {
            "location": "/modules/spades/#assemble-reads-with-spades", 
            "text": "We will perform a  de novo  assembly of the mutant FASTQ reads into long contiguous sequences (in FASTA format.)     Go to  Tools   NGS Analysis   NGS: Assembly   spades   Set the following parameters (leave other settings as they are):   Run only Assembly :  Yes  [the  Yes  button should be darker grey]  Kmers to use separated by commas:   33,55,91   [note: no spaces]    Coverage cutoff:   auto     Files   Forward reads:   mutant_R1.fastq     Files   Reverse reads:   mutant_R2.fastq        Your tool interface should look like this:      Click  Execute", 
            "title": "Assemble reads with Spades"
        }, 
        {
            "location": "/modules/spades/#examine-the-output", 
            "text": "Galaxy is now running Spades on the reads for you.   When it is finished, you will have five new files in your history.     two FASTA files of the resulting contigs and scaffolds  two files for statistics about these  the Spades logfile       Click on the View Data button   on each of the files.  Note that the short reads have been assembled into much longer contigs.  (However, in this case, the contigs have not been assembled into larger scaffolds.)  The stats files will give you the length of each of the contigs.", 
            "title": "Examine the output"
        }, 
        {
            "location": "/modules/spades/#what-next", 
            "text": "Annotate the genome using Prokka.", 
            "title": "What next?"
        }, 
        {
            "location": "/modules/prokka/", 
            "text": "Genome annotation using Prokka\n\n\nBackground\n\n\nIn this section we will use a software tool called Prokka to annotate the draft genome sequence produced in the previous \ntutorial\n. Prokka is a \u201cwrapper\u201d; it collects together several pieces of software (from various authors), and so avoids \u201cre-inventing the wheel\u201d.\n\n\nProkka finds and annotates features (both protein coding regions and RNA genes, i.e. tRNA, rRNA) present on on a sequence. Note, Prokka uses a two-step process for the annotation of protein coding regions: first, protein coding regions on the genome are identified using \nProdigal\n; second, the \nfunction\n of the encoded protein is predicted by similarity to proteins in one of many protein or protein domain databases. Prokka is a software tool that can be used to annotate bacterial, archaeal and viral genomes quickly, generating standard output files in GenBank, EMBL and gff formats. More information about Prokka can be found \nhere\n.\n\n\nLearning objectives\n\n\nAt the end of this tutorial you should be able to:\n\n\n\n\nload a genome assembly into Prokka\n\n\nannotate the assembly using Prokka\n\n\nexamine the annotated genome using JBrowse\n\n\n\n\nInput data\n\n\n\n\nYou will need the assembled contigs from the previous workshop (\nAssembly with Spades\n): \nSPAdes_contigs.fasta\n\n\nIf you are continuing on from that tutorial, this file will be in your current history and there is no need to find/import it.\n\n\n\n\nRun Prokka\n\n\n\n\nIn Galaxy, go to \nTools \n NGS Analysis \n NGS: Annotation \n Prokka\n  \n\n\nSet the following parameters (leave everything else unchanged):\n\n\nContigs to annotate\n: \nSPAdes contigs (fasta)\n  \n\n\nLocus tag prefix (\nlocustag)\n: P\n\n\nForce GenBank/ENA/DDJB compliance (\ncompliant)\n: \nNo\n\n\nSequencing Centre ID (\ncentre)\n: V\n\n\nGenus Name\n: \nStaphylococcus\n  \n\n\nSpecies Name\n: \naureus\n  \n\n\nUse genus-specific BLAST database\n \nNo\n  \n\n\n\n\n\n\n\n\nYour tool interface should look like this:\n\n\n\n\n\n\nClick \nExecute\n  \n\n\n\n\nExamine the output\n\n\nFirst, enable \nScratchbook\n in Galaxy - this allows you to view several windows simultaneously. Click on the 3\n3 squares icon on the menu bar:\n\n\n\n\nOnce Prokka has finished, examine each of its output files.\n\n\n\n\nThe GFF and GBK files contain all of the information about the features annotated (in different formats.)\n\n\nThe \n.txt\n file contains a summary of the number of features annotated.\n\n\nThe \n.faa\n file contains the protein sequences of the genes annotated.\n\n\nThe \n.ffn\n file contains the nucleotide sequences of the genes annotated.\n\n\n\n\nView annotated features in JBrowse\n\n\nNow that we have annotated the draft genome sequence, we would like to view the sequence in the JBrowse genome viewer.\n\n\n\n\n\n\nGo to \nStatistics and Visualisation \n Graph/Display Data \n JBrowse\n\n\n\n\n\n\nUnder \nFasta Sequence(s)\n choose \nProkka on data XX:fna\n. This sequence will be the reference against which annotations are displayed.\n\n\n\n\n\n\nFor \nProduce a Standalone Instance\n select \nYes\n.\n\n\n\n\n\n\nFor \nGenetic Code\n choose \n11: The Bacterial, Archaeal and Plant Plastid Code\n.\n\n\n\n\n\n\nClick \nInsert Track Group\n\n\n\n\n\n\nClick \nInsert Annotation Track\n\n\n\n\n\n\nFor \nTrack Type\n choose \nGFF/GFF3/BED/GBK Features\n\n\n\n\n\n\nFor \nGFF/GFF3/BED Track Data\n select \nProkka on data XX:gff\n  [Note: not wildtype.gff]\n\n\n\n\n\n\nYour tool interface should look like this:\n\n\n\n\n\n\n\n\nClick \nExecute\n\n\n\n\n\n\nA new file will be created, called \nJBrowse on data XX and data XX - Complete\n. Click on the eye icon next to the file name. The JBrowse window will appear in the centre Galaxy panel.\n\n\n\n\n\n\nUnder \nAvailable Tracks\n on the left, tick the box for \nProkka on data XX:gff\n.\n\n\n\n\n\n\nSelect contig 6 in the drop down box. You can only see one contig displayed at a time.\n\n\n\n\n\n\n\n\n\n\nUse the plus and minus buttons to zoom in and out, and the arrows to move left or right (or click and drag within the window to move left or right).\n\n\n\n\nZoomed out view:\n\n\n\n\nZoom in to see the reference sequence at the top. JBrowse displays the sequence and a 6-frame amino acid translation.\n\n\nZoomed in view:\n\n\n\n\n\n\nClick on a gene/feature annotation (the bars on the annotation track) to see more information.\n\n\ngene name\n\n\nproduct name\n\n\nyou can download the FASTA sequence by clicking on the disk icon.\n\n\n\n\n\n\n\n\nWhat next?\n\n\n\n\nIdentify genome variants (nucletotide changes) using \nSnippy\n.", 
            "title": "Genome annotation"
        }, 
        {
            "location": "/modules/prokka/#genome-annotation-using-prokka", 
            "text": "", 
            "title": "Genome annotation using Prokka"
        }, 
        {
            "location": "/modules/prokka/#background", 
            "text": "In this section we will use a software tool called Prokka to annotate the draft genome sequence produced in the previous  tutorial . Prokka is a \u201cwrapper\u201d; it collects together several pieces of software (from various authors), and so avoids \u201cre-inventing the wheel\u201d.  Prokka finds and annotates features (both protein coding regions and RNA genes, i.e. tRNA, rRNA) present on on a sequence. Note, Prokka uses a two-step process for the annotation of protein coding regions: first, protein coding regions on the genome are identified using  Prodigal ; second, the  function  of the encoded protein is predicted by similarity to proteins in one of many protein or protein domain databases. Prokka is a software tool that can be used to annotate bacterial, archaeal and viral genomes quickly, generating standard output files in GenBank, EMBL and gff formats. More information about Prokka can be found  here .", 
            "title": "Background"
        }, 
        {
            "location": "/modules/prokka/#learning-objectives", 
            "text": "At the end of this tutorial you should be able to:   load a genome assembly into Prokka  annotate the assembly using Prokka  examine the annotated genome using JBrowse", 
            "title": "Learning objectives"
        }, 
        {
            "location": "/modules/prokka/#input-data", 
            "text": "You will need the assembled contigs from the previous workshop ( Assembly with Spades ):  SPAdes_contigs.fasta  If you are continuing on from that tutorial, this file will be in your current history and there is no need to find/import it.", 
            "title": "Input data"
        }, 
        {
            "location": "/modules/prokka/#run-prokka", 
            "text": "In Galaxy, go to  Tools   NGS Analysis   NGS: Annotation   Prokka     Set the following parameters (leave everything else unchanged):  Contigs to annotate :  SPAdes contigs (fasta)     Locus tag prefix ( locustag) : P  Force GenBank/ENA/DDJB compliance ( compliant) :  No  Sequencing Centre ID ( centre) : V  Genus Name :  Staphylococcus     Species Name :  aureus     Use genus-specific BLAST database   No        Your tool interface should look like this:    Click  Execute", 
            "title": "Run Prokka"
        }, 
        {
            "location": "/modules/prokka/#examine-the-output", 
            "text": "First, enable  Scratchbook  in Galaxy - this allows you to view several windows simultaneously. Click on the 3 3 squares icon on the menu bar:   Once Prokka has finished, examine each of its output files.   The GFF and GBK files contain all of the information about the features annotated (in different formats.)  The  .txt  file contains a summary of the number of features annotated.  The  .faa  file contains the protein sequences of the genes annotated.  The  .ffn  file contains the nucleotide sequences of the genes annotated.", 
            "title": "Examine the output"
        }, 
        {
            "location": "/modules/prokka/#view-annotated-features-in-jbrowse", 
            "text": "Now that we have annotated the draft genome sequence, we would like to view the sequence in the JBrowse genome viewer.    Go to  Statistics and Visualisation   Graph/Display Data   JBrowse    Under  Fasta Sequence(s)  choose  Prokka on data XX:fna . This sequence will be the reference against which annotations are displayed.    For  Produce a Standalone Instance  select  Yes .    For  Genetic Code  choose  11: The Bacterial, Archaeal and Plant Plastid Code .    Click  Insert Track Group    Click  Insert Annotation Track    For  Track Type  choose  GFF/GFF3/BED/GBK Features    For  GFF/GFF3/BED Track Data  select  Prokka on data XX:gff   [Note: not wildtype.gff]    Your tool interface should look like this:     Click  Execute    A new file will be created, called  JBrowse on data XX and data XX - Complete . Click on the eye icon next to the file name. The JBrowse window will appear in the centre Galaxy panel.    Under  Available Tracks  on the left, tick the box for  Prokka on data XX:gff .    Select contig 6 in the drop down box. You can only see one contig displayed at a time.      Use the plus and minus buttons to zoom in and out, and the arrows to move left or right (or click and drag within the window to move left or right).   Zoomed out view:   Zoom in to see the reference sequence at the top. JBrowse displays the sequence and a 6-frame amino acid translation.  Zoomed in view:    Click on a gene/feature annotation (the bars on the annotation track) to see more information.  gene name  product name  you can download the FASTA sequence by clicking on the disk icon.", 
            "title": "View annotated features in JBrowse"
        }, 
        {
            "location": "/modules/prokka/#what-next", 
            "text": "Identify genome variants (nucletotide changes) using  Snippy .", 
            "title": "What next?"
        }, 
        {
            "location": "/modules/snippy/", 
            "text": "Variant calling with Snippy\n\n\nBackground\n\n\nVariant calling is the process of identifying differences between two genome samples.\nUsually differences are limited to single nucleotide polymorphisms (SNPs) and small insertions and deletions (indels). Larger structural variation such as inversions, duplications and large deletions are not typically covered by \nvariant calling\n.\n\n\nLearning Objectives\n\n\n\n\nFind variants between a reference genome and a set of reads\n\n\nVisualise the SNP in context of the reads aligned to the genome\n\n\nDetermine the effect of those variants on genomic features\n\n\nUnderstand if the SNP is potentially affecting the phenotype\n\n\n\n\nPrepare reference\n\n\nWe will use the same data that we used in the \nAssembly with Spades tutorial.\n This should still be in your current galaxy history. If not, re-import the data into a new history using the instructions in that tutorial.\n\n\nFor variant calling, we need a reference genome that is of the same strain as the input sequence reads.\n\n\nFor this tutorial, our reference is the \nwildtype.gbk\n file and our reads are \nmutant_R1.fastq\n and \nmutant_R2.fastq\n.\n\n\nCall variants with Snippy\n\n\n\n\nGo to \nTools \n NGS Analysis \n NGS: Variant Analysis \n snippy\n\n\nFor \nReference type\n select \nGenbank\n.\n\n\nThen for \nReference Genbank\n choose the \nwildtype.gbk\n file.\n\n\nFor \nSingle or Paired-end reads\n choose \nPaired\n.\n\n\nThen choose the first set of reads, \nmutant_R1.fastq\n and second set of reads, \nmutant_R2.fastq\n.\n\n\nFor \nCleanup the non-snp output files\n select \nNo\n.\n\n\n\n\nYour tool interface should look like this:\n\n\n\n\n\n\nClick \nExecute\n.\n\n\n\n\nExamine snippy output\n\n\nFirst, enable \nScratchbook\n in Galaxy - this allows you to view several windows simultaneously. Click on the squares:\n\n\n\n\nFrom Snippy, there are 10 output files in various formats.\n\n\n\n\nGo to the file called \nsnippy on data XX, data XX and data XX table\n and click on the eye icon.\n\n\nWe can see a list of variants. Look in column 3 to see which types the variants are, such as a SNP or a deletion.\n\n\nLook at the third variant called. This is a T\nA mutation, causing a stop codon. Look at column 14: the product of this gene is a methicillin resistance protein. Methicillin is an antibiotic. What might be the result of such a mutation? \n\n\n\n\nView Snippy output in JBrowse\n\n\n\n\n\n\nGo to \nStatistics and Visualisation \n Graph/Display Data \n JBrowse\n\n\n\n\n\n\nUnder \nFasta Sequence(s)\n choose \nwildtype.fna\n. This sequence will be the reference against which annotations are displayed.\n\n\n\n\n\n\nFor \nProduce a Standalone Instance\n select \nYes\n.\n\n\n\n\n\n\nFor \nGenetic Code\n choose \n11: The Bacterial, Archaeal and Plant Plastid Code\n.\n\n\n\n\n\n\nWe will now set up three different tracks - these are datasets displayed underneath the reference sequence (which is displayed as nucleotides in FASTA format). We will choose to display the sequence reads (the .bam file), the variants found by snippy (the .gff file) and the annotated reference genome (the wildtype.gff)\n\n\n\n\n\n\nTrack 1 - sequence reads\n\n\n\n\nClick \nInsert Track Group\n\n\nFor \nTrack Cateogry\n name it \nsequence reads\n\n\nClick \nInsert Annotation Track\n\n\nFor \nTrack Type\n choose \nBAM Pileups\n\n\nFor \nBAM Track Data\n select \nthe snippy bam file\n\n\nFor \nAutogenerate SNP Track\n select \nYes\n\n\n\n\nTrack 2 - variants\n\n\n\n\nClick \nInsert Track Group\n again\n\n\nFor \nTrack Category\n name it \nvariants\n\n\nClick \nInsert Annotation Track\n\n\nFor \nTrack Type\n choose \nGFF/GFF3/BED/GBK Features\n\n\nFor \nSNP Track Data\n select \nthe snippy snps gff file\n\n\n\n\nTrack 3 - annotated reference\n\n\n\n\nClick \nInsert Track Group\n again\n\n\nFor \n Track Category\n name it \nannotated reference\n\n\nClick \nInsert Annotation Track\n\n\nFor \nTrack Type\n choose \nGFF/GFF3/BED/GBK Features\n\n\nFor \nSNP Track Data\n select \nwildtype.gff\n\n\n\n\nUnder \nJBrowse Styling Options \n JBrowse style. description\n type in \nproduct,note,description\n\n\n\n\n\n\nClick \nExecute\n\n\n\n\n\n\nA new file will be created, called \nJBrowse on data XX and data XX - Complete\n. Click on the eye icon next to the file name. The JBrowse window will appear in the centre Galaxy panel.\n\n\n\n\n\n\nOn the left, tick boxes display the tracks\n\n\n\n\n\n\nUse the minus button to zoom out to see:\n\n\n\n\nsequence reads and their coverage (the grey graph)\n\n\n\n\n\n\n\n\nUse the plus button to zoom in to see:\n\n\n\n\nprobable real variants (a whole column of snps)\n\n\nprobable errors (single one here and there)\n\n\n\n\n\n\n\n\n\n\n\n\nIn the coordinates box, type in \n47299\n and then \nGo\n to see the position of the SNP discussed above.\n\n\nthe correct codon at this position is TGT, coding for the amino acid Cysteine, in the middle row of the amino acid translations.\n\n\nthe mutation of T \n A turns this triplet into TGA, a stop codon.\n\n\n\n\n\n\n\n\n    \n\n\nConclusion", 
            "title": "Variant finding"
        }, 
        {
            "location": "/modules/snippy/#variant-calling-with-snippy", 
            "text": "", 
            "title": "Variant calling with Snippy"
        }, 
        {
            "location": "/modules/snippy/#background", 
            "text": "Variant calling is the process of identifying differences between two genome samples.\nUsually differences are limited to single nucleotide polymorphisms (SNPs) and small insertions and deletions (indels). Larger structural variation such as inversions, duplications and large deletions are not typically covered by  variant calling .", 
            "title": "Background"
        }, 
        {
            "location": "/modules/snippy/#learning-objectives", 
            "text": "Find variants between a reference genome and a set of reads  Visualise the SNP in context of the reads aligned to the genome  Determine the effect of those variants on genomic features  Understand if the SNP is potentially affecting the phenotype", 
            "title": "Learning Objectives"
        }, 
        {
            "location": "/modules/snippy/#prepare-reference", 
            "text": "We will use the same data that we used in the  Assembly with Spades tutorial.  This should still be in your current galaxy history. If not, re-import the data into a new history using the instructions in that tutorial.  For variant calling, we need a reference genome that is of the same strain as the input sequence reads.  For this tutorial, our reference is the  wildtype.gbk  file and our reads are  mutant_R1.fastq  and  mutant_R2.fastq .", 
            "title": "Prepare reference"
        }, 
        {
            "location": "/modules/snippy/#call-variants-with-snippy", 
            "text": "Go to  Tools   NGS Analysis   NGS: Variant Analysis   snippy  For  Reference type  select  Genbank .  Then for  Reference Genbank  choose the  wildtype.gbk  file.  For  Single or Paired-end reads  choose  Paired .  Then choose the first set of reads,  mutant_R1.fastq  and second set of reads,  mutant_R2.fastq .  For  Cleanup the non-snp output files  select  No .   Your tool interface should look like this:    Click  Execute .", 
            "title": "Call variants with Snippy"
        }, 
        {
            "location": "/modules/snippy/#examine-snippy-output", 
            "text": "First, enable  Scratchbook  in Galaxy - this allows you to view several windows simultaneously. Click on the squares:   From Snippy, there are 10 output files in various formats.   Go to the file called  snippy on data XX, data XX and data XX table  and click on the eye icon.  We can see a list of variants. Look in column 3 to see which types the variants are, such as a SNP or a deletion.  Look at the third variant called. This is a T A mutation, causing a stop codon. Look at column 14: the product of this gene is a methicillin resistance protein. Methicillin is an antibiotic. What might be the result of such a mutation?", 
            "title": "Examine snippy output"
        }, 
        {
            "location": "/modules/snippy/#view-snippy-output-in-jbrowse", 
            "text": "Go to  Statistics and Visualisation   Graph/Display Data   JBrowse    Under  Fasta Sequence(s)  choose  wildtype.fna . This sequence will be the reference against which annotations are displayed.    For  Produce a Standalone Instance  select  Yes .    For  Genetic Code  choose  11: The Bacterial, Archaeal and Plant Plastid Code .    We will now set up three different tracks - these are datasets displayed underneath the reference sequence (which is displayed as nucleotides in FASTA format). We will choose to display the sequence reads (the .bam file), the variants found by snippy (the .gff file) and the annotated reference genome (the wildtype.gff)    Track 1 - sequence reads   Click  Insert Track Group  For  Track Cateogry  name it  sequence reads  Click  Insert Annotation Track  For  Track Type  choose  BAM Pileups  For  BAM Track Data  select  the snippy bam file  For  Autogenerate SNP Track  select  Yes   Track 2 - variants   Click  Insert Track Group  again  For  Track Category  name it  variants  Click  Insert Annotation Track  For  Track Type  choose  GFF/GFF3/BED/GBK Features  For  SNP Track Data  select  the snippy snps gff file   Track 3 - annotated reference   Click  Insert Track Group  again  For   Track Category  name it  annotated reference  Click  Insert Annotation Track  For  Track Type  choose  GFF/GFF3/BED/GBK Features  For  SNP Track Data  select  wildtype.gff   Under  JBrowse Styling Options   JBrowse style. description  type in  product,note,description    Click  Execute    A new file will be created, called  JBrowse on data XX and data XX - Complete . Click on the eye icon next to the file name. The JBrowse window will appear in the centre Galaxy panel.    On the left, tick boxes display the tracks    Use the minus button to zoom out to see:   sequence reads and their coverage (the grey graph)     Use the plus button to zoom in to see:   probable real variants (a whole column of snps)  probable errors (single one here and there)       In the coordinates box, type in  47299  and then  Go  to see the position of the SNP discussed above.  the correct codon at this position is TGT, coding for the amino acid Cysteine, in the middle row of the amino acid translations.  the mutation of T   A turns this triplet into TGA, a stop codon.", 
            "title": "View Snippy output in JBrowse"
        }, 
        {
            "location": "/modules/snippy/#conclusion", 
            "text": "", 
            "title": "Conclusion"
        }, 
        {
            "location": "/about/", 
            "text": "About\n\n\nSEPSIS-Omics is An RDS-funded flagship project to provide cloud-based data services and tools\nfor Australian Life Science Researchers to combine, analyse and interpret\ngenomic, transcriptomic, proteomic and metabolomic data.\n\n\nAuthors\n\n\n Anna Syme\n\n\n Torsten Seemann\n\n\n Simon Gladman\n\n\n Dieter Bulach\n\n\nSupport\n\n\n\n\nResearch Data Services\n\n\nBioplatforms Australia\n\n\nNectar", 
            "title": "About"
        }, 
        {
            "location": "/about/#about", 
            "text": "SEPSIS-Omics is An RDS-funded flagship project to provide cloud-based data services and tools\nfor Australian Life Science Researchers to combine, analyse and interpret\ngenomic, transcriptomic, proteomic and metabolomic data.", 
            "title": "About"
        }, 
        {
            "location": "/about/#authors", 
            "text": "Anna Syme   Torsten Seemann   Simon Gladman   Dieter Bulach", 
            "title": "Authors"
        }, 
        {
            "location": "/about/#support", 
            "text": "Research Data Services  Bioplatforms Australia  Nectar", 
            "title": "Support"
        }
    ]
}